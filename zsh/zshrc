#zmodload zsh/zprof

export TERM="xterm-256color"
export PATH="/usr/local/opt/qt@5.5/bin:/usr/local/bin:$HOME/bin:$HOME/usr/local/bin:/Users/phillipmuldoon/.cask/bin:$PATH"
export NVM_DIR="$HOME/.nvm"

# Direnv hooks
export DIRENV_LOG_FORMAT=  # comment this out to be more verbose
eval "$(direnv hook zsh)"

# History config
alias hh=hstr                    # hh to be alias for hstr
export HISTFILE=~/.zsh_history   # ensure history file visibility
export HSTR_CONFIG=hicolor       # get more colors
bindkey -s "\C-r" "\eqhstr\n"    

# Setup the editor
alias emacs="/usr/local/opt/emacs-plus/Emacs.app/Contents/MacOS/Emacs"
export EDITOR=emacs
export VISUAL=$EDITOR

# Various Rails shortcuts
alias rsp='bundle exec rspec'
alias rke='bundle exec rails'

# bat > cat
alias cat='bat'

# FZF setup
export FZF_DEFAULT_COMMAND='rg --files --hidden --smart-case --glob "!.git/*"'                                                    
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(emacs {})+abort'
--color=dark
--color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
--color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7" 

# preview - fuzzy open with emacs from anywhere
# ex: preview word1 word2 ... (even part of a file name)
fpreview() {
    fzf --preview 'bat --wrap=character --terminal-width=$FZF_PREVIEW_COLUMNS --color "always" {}'
}

# fif - Find in file and open it.
fif() {
    if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
    local file
    file="$(rga --max-count=1 --ignore-case --files-with-matches --no-messages "$@" | fzf-tmux +m --preview="rga --ignore-case --pretty --context 10 '"$@"' {}")" && open "$file"
}

# fkill - Kill processes - list only processes user can kill.
fkill() {
    local pid 
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  
}

# fbrewi - Install (one or multiple) selected application(s)
# using "brew search" as source input
fbrewi() {
  local inst=$(brew search | fzf -m)

  if [[ $inst ]]; then
    for prog in $(echo $inst);
    do; brew install $prog; done;
  fi
}

# fbrewu - Update (one or multiple) selected application(s)
fbrewu() {
  local upd=$(brew leaves | fzf -m)

  if [[ $upd ]]; then
    for prog in $(echo $upd);
    do; brew upgrade $prog; done;
  fi
}

# fbrewd - elete (one or multiple) selected application(s)
fbrewd() {
  local uninst=$(brew leaves | fzf -m)

  if [[ $uninst ]]; then
    for prog in $(echo $uninst);
    do; brew uninstall $prog; done;
  fi
}

# Set mouse scaling
defaults write -g com.apple.mouse.scaling  6.0

# VPN CLI
alias favpn="osascript -e 'tell application \"Viscosity\" to connect \"Corporate VPN V3.0\"'"

# We don't go to Ravenholm^H^H^H^HSpring
export DISABLE_SPRING=true

# FZF completion
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_COMPLETION_TRIGGER=''
bindkey '^T' fzf-completion
bindkey '^I' $fzf_default_completion

# Prompt
eval "$(starship init zsh)"
